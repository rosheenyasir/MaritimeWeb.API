// <auto-generated />
using System;
using MariTimeWeb.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MariTimeWeb.API.Migrations
{
    [DbContext(typeof(MariTimeDbContext))]
    partial class MariTimeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MariTimeWeb.API.Models.Port", b =>
                {
                    b.Property<int>("PortId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PortId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PortId");

                    b.ToTable("Ports");
                });

            modelBuilder.Entity("MariTimeWeb.API.Models.Ship", b =>
                {
                    b.Property<int>("ShipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShipId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShipId");

                    b.ToTable("Ships");
                });

            modelBuilder.Entity("MariTimeWeb.API.Models.VisitedCountry", b =>
                {
                    b.Property<int>("VisitedCountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VisitedCountryId"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.Property<int>("VisitId")
                        .HasColumnType("int");

                    b.HasKey("VisitedCountryId");

                    b.HasIndex("ShipId");

                    b.ToTable("VisitedCountries");
                });

            modelBuilder.Entity("MariTimeWeb.API.Models.Voyage", b =>
                {
                    b.Property<int>("VoyageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoyageId"));

                    b.Property<int>("ArrivalPortId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeparturePortId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ShipId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("VoyageId");

                    b.HasIndex("ArrivalPortId");

                    b.HasIndex("DeparturePortId");

                    b.HasIndex("ShipId");

                    b.ToTable("Voyages");
                });

            modelBuilder.Entity("MariTimeWeb.API.Models.VisitedCountry", b =>
                {
                    b.HasOne("MariTimeWeb.API.Models.Ship", "Ship")
                        .WithMany("VisitedCountries")
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("MariTimeWeb.API.Models.Voyage", b =>
                {
                    b.HasOne("MariTimeWeb.API.Models.Port", "ArrivalPort")
                        .WithMany("ArrivalVoyages")
                        .HasForeignKey("ArrivalPortId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MariTimeWeb.API.Models.Port", "DeparturePort")
                        .WithMany("DepartureVoyages")
                        .HasForeignKey("DeparturePortId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MariTimeWeb.API.Models.Ship", "Ship")
                        .WithMany("Voyages")
                        .HasForeignKey("ShipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArrivalPort");

                    b.Navigation("DeparturePort");

                    b.Navigation("Ship");
                });

            modelBuilder.Entity("MariTimeWeb.API.Models.Port", b =>
                {
                    b.Navigation("ArrivalVoyages");

                    b.Navigation("DepartureVoyages");
                });

            modelBuilder.Entity("MariTimeWeb.API.Models.Ship", b =>
                {
                    b.Navigation("VisitedCountries");

                    b.Navigation("Voyages");
                });
#pragma warning restore 612, 618
        }
    }
}
